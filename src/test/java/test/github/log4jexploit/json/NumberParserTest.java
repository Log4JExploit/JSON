package test.github.log4jexploit.json;

import github.log4jexploit.json.NumberParser;
import github.log4jexploit.json.exceptions.EndReachedException;
import github.log4jexploit.json.exceptions.JSONParseException;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class NumberParserTest {

    private static NumberParser parser = null;

    @BeforeAll
    static void prep() {
        parser = new NumberParser();
    }

    @Test
    void testWithPositiveInteger() {
        assertEquals(99L, parser.parse("99"));
    }

    @Test
    void testWithPositiveDecimal() {
        assertEquals(2.04f, parser.parse("2.04").floatValue());
    }

    @Test
    void testWithNegativeDecimal() {
        assertEquals(-2.04f, parser.parse("-2.04").floatValue());
    }

    @Test
    void testWithExplicitlyPositiveDecimal() {
        assertEquals(2.04f, parser.parse("+2.04").floatValue());
    }

    @Test
    void testPositiveDecimalWithManyDigits() {
        assertEquals(
                12345678911234567.12345678901234567,
                parser.parse("12345678911234567.12345678901234567")
        );
    }

    @Test
    void testPositiveIntegerWithManyDigits() {
        assertEquals(1234567890123456789L, parser.parse("1234567890123456789"));
        assertThrows(JSONParseException.class, () -> parser.parse("12345678901234567890"));
    }

    @Test
    void testPositiveIntegerWithNegativeExponent() {
        assertEquals(0.123f, parser.parse("123e-3").floatValue());
    }

    @Test
    void testPositiveIntegerWithExponent() {
        assertEquals(12L, parser.parse("12000e-3"));
    }

    @Test
    void testNegativeDecimalWithExponent() {
        NumberParser parser = new NumberParser();
        assertEquals(-123456789, parser.parse("-0.123456789e+9").intValue());
    }

    @Test
    void testThrows() {
        assertThrows(IllegalStateException.class, () -> parser.parse("-3d3"));
        assertThrows(IllegalStateException.class, () -> parser.parse("-3,3"));
        assertThrows(JSONParseException.class, () -> parser.parse("-/3"));
        assertThrows(JSONParseException.class, () -> parser.parse("--3.0"));
        assertThrows(EndReachedException.class, () -> parser.parse("3."));
        assertThrows(IllegalStateException.class, () -> parser.parse("1e+42e+4"));
        assertThrows(JSONParseException.class, () -> parser.parse("1e+04"));
        assertThrows(JSONParseException.class, () -> parser.parse("01e+4"));
    }

    @Test
    void testParseInsignificantDigits() {
        assertEquals(0.123456789, parser.parseInsignificantDigits("123456789"), 0.0000000001);
        //                                                                                         0.123456789_
    }
}
