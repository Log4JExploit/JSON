package github.log4jexploit.json;

public interface JSONAble {

    String toJSONString();

    boolean isArray();

    boolean isObject();

    JSONObject asObject();

    JSONArray asArray();

    static String toValueString(Object object) {
        if(object instanceof JSONAble obj) {
            return obj.toJSONString();
        } else if(object == null) {
            return "null";
        } else if(Primitives.isPrimitive(object)) {
            return object.toString();
        } else {
            return "\"" + escapeText(object.toString()) + "\"";
        }
    }

    static String escapeText(String text) {
        StringIterator iterator = new StringIterator(text);
        StringBuilder buffer = new StringBuilder();

        do {
            if(iterator.current() == '\"') {
                if(!iterator.hasLast() || iterator.getLast() != '\\') {
                    buffer.append('\\');
                    buffer.append(iterator.current());
                    continue;
                }
            }

            if(iterator.current() == '\\') {
                if (iterator.hasNext()) {
                    char peek = iterator.peek();
                    if (peek != '\\' && peek != '\"') {
                        buffer.append("\\\\");
                        continue;
                    }
                } else {
                    buffer.append("\\\\");
                    continue;
                }
            }

            if(iterator.current() < 32) {
                buffer.append("\\");
            }

            buffer.append(iterator.current());
        } while (iterator.tryAdvance());
        return buffer.toString();
    }
}
