package github.log4jexploit.json;

import java.util.*;

public class JSONArray extends ArrayList<Object> implements JSONAble {

    public JSONArray() {
        super();
    }

    public JSONArray(int capacity) {
        super(capacity);
    }

    public JSONArray(Object... objects) {
        super();
        Collections.addAll(this, objects);
    }

    public JSONArray(Object[]... objects) {
        super();
        for(Object[] objectList : objects) {
            this.addAll(Arrays.asList(objectList));
        }
    }

    public JSONArray(Collection<Object> listToAdd) {
        this.addAll(listToAdd);
    }

    /**
     * Creates a JSON string. Objects that are {@link JSONAble} will be recursively invoked.
     */
    @Override
    public String toJSONString() {
        if(this.isEmpty())
            return "[]";

        StringBuilder buffer = new StringBuilder();
        buffer.append("[");

        for(Object object : this) {
            buffer.append(JSONAble.toValueString(object));
            buffer.append(", ");
        }

        // Delete pending comma + space
        if(buffer.toString().endsWith(", "))
            buffer.delete(buffer.length() - 2, buffer.length());

        buffer.append("]");
        return buffer.toString();
    }

    /**
     * Invokes <code>toJSONString()<code/>
     */
    @Override
    public String toString() {
        return this.toJSONString();
    }

    @Override
    public boolean isArray() {
        return true;
    }

    @Override
    public boolean isObject() {
        return false;
    }

    @Override
    public JSONArray asArray() {
        return this;
    }

    @Override
    public JSONObject asObject() {
        return null;
    }
}
